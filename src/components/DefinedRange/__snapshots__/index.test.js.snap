// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DefinedRange tests Should render dynamic static label contents correctly 1`] = `
<div
  className="rdrnDefinedRangesWrapper"
>
  <div
    className="rdrnStaticRanges"
  >
    <button
      className="rdrnStaticRange"
      key="0"
      onClick={[Function]}
      onFocus={[Function]}
      onMouseLeave={[Function]}
      onMouseOver={[Function]}
      style={
        Object {
          "color": null,
        }
      }
      type="button"
    >
      <span
        className="rdrnStaticRangeLabel"
        tabIndex={-1}
      >
        <i
          className="italic-label-content"
        >
          Italic Content
        </i>
      </span>
    </button>
    <button
      className="rdrnStaticRange"
      key="1"
      onClick={[Function]}
      onFocus={[Function]}
      onMouseLeave={[Function]}
      onMouseOver={[Function]}
      style={
        Object {
          "color": null,
        }
      }
      type="button"
    >
      <span
        className="rdrnStaticRangeLabel"
        tabIndex={-1}
      >
        Static Label
      </span>
    </button>
    <button
      className="rdrnStaticRange"
      key="2"
      onClick={[Function]}
      onFocus={[Function]}
      onMouseLeave={[Function]}
      onMouseOver={[Function]}
      style={
        Object {
          "color": null,
        }
      }
      type="button"
    >
      <span
        className="rdrnStaticRangeLabel"
        tabIndex={-1}
      >
        <img
          className="random-image"
        />
      </span>
    </button>
    <button
      className="rdrnStaticRange"
      key="3"
      onClick={[Function]}
      onFocus={[Function]}
      onMouseLeave={[Function]}
      onMouseOver={[Function]}
      style={
        Object {
          "color": null,
        }
      }
      type="button"
    >
      <span
        className="rdrnStaticRangeLabel"
        tabIndex={-1}
      >
        <b
          className="bold-label-content"
        >
          Bold Content
        </b>
      </span>
    </button>
  </div>
  <div
    className="rdrnInputRanges"
  >
    <InputRangeField
      key="0"
      label="days up to today"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      placeholder="-"
      styles={
        Object {
          "calendarWrapper": "rdrnCalendarWrapper",
          "dateDisplay": "rdrnDateDisplay",
          "dateDisplayItem": "rdrnDateDisplayItem",
          "dateDisplayItemActive": "rdrnDateDisplayItemActive",
          "dateDisplayWrapper": "rdrnDateDisplayWrapper",
          "dateRangePickerWrapper": "rdrnDateRangePickerWrapper",
          "dateRangeWrapper": "rdrnDateRangeWrapper",
          "day": "rdrnDay",
          "dayActive": "rdrnDayActive",
          "dayDisabled": "rdrnDayDisabled",
          "dayEndOfMonth": "rdrnDayEndOfMonth",
          "dayEndOfWeek": "rdrnDayEndOfWeek",
          "dayEndPreview": "rdrnDayEndPreview",
          "dayHovered": "rdrnDayHovered",
          "dayInPreview": "rdrnDayInPreview",
          "dayNumber": "rdrnDayNumber",
          "dayPassive": "rdrnDayPassive",
          "daySelected": "rdrnDaySelected",
          "dayStartOfMonth": "rdrnDayStartOfMonth",
          "dayStartOfWeek": "rdrnDayStartOfWeek",
          "dayStartPreview": "rdrnDayStartPreview",
          "dayToday": "rdrnDayToday",
          "dayWeekend": "rdrnDayWeekend",
          "days": "rdrnDays",
          "definedRangesWrapper": "rdrnDefinedRangesWrapper",
          "endEdge": "rdrnEndEdge",
          "inRange": "rdrnInRange",
          "infiniteMonths": "rdrnInfiniteMonths",
          "inputRange": "rdrnInputRange",
          "inputRangeInput": "rdrnInputRangeInput",
          "inputRanges": "rdrnInputRanges",
          "month": "rdrnMonth",
          "monthAndYearPickers": "rdrnMonthAndYearPickers",
          "monthAndYearWrapper": "rdrnMonthAndYearWrapper",
          "monthName": "rdrnMonthName",
          "monthPicker": "rdrnMonthPicker",
          "months": "rdrnMonths",
          "monthsHorizontal": "rdrnMonthsHorizontal",
          "monthsVertical": "rdrnMonthsVertical",
          "nextButton": "rdrnNextButton",
          "nextPrevButton": "rdrnNextPrevButton",
          "prevButton": "rdrnPprevButton",
          "selected": "rdrnSelected",
          "startEdge": "rdrnStartEdge",
          "staticRange": "rdrnStaticRange",
          "staticRangeLabel": "rdrnStaticRangeLabel",
          "staticRangeSelected": "rdrnStaticRangeSelected",
          "staticRanges": "rdrnStaticRanges",
          "weekDay": "rdrnWeekDay",
          "weekDays": "rdrnWeekDays",
          "yearPicker": "rdrnYearPicker",
        }
      }
      value="-"
    />
    <InputRangeField
      key="1"
      label="days starting today"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      placeholder="-"
      styles={
        Object {
          "calendarWrapper": "rdrnCalendarWrapper",
          "dateDisplay": "rdrnDateDisplay",
          "dateDisplayItem": "rdrnDateDisplayItem",
          "dateDisplayItemActive": "rdrnDateDisplayItemActive",
          "dateDisplayWrapper": "rdrnDateDisplayWrapper",
          "dateRangePickerWrapper": "rdrnDateRangePickerWrapper",
          "dateRangeWrapper": "rdrnDateRangeWrapper",
          "day": "rdrnDay",
          "dayActive": "rdrnDayActive",
          "dayDisabled": "rdrnDayDisabled",
          "dayEndOfMonth": "rdrnDayEndOfMonth",
          "dayEndOfWeek": "rdrnDayEndOfWeek",
          "dayEndPreview": "rdrnDayEndPreview",
          "dayHovered": "rdrnDayHovered",
          "dayInPreview": "rdrnDayInPreview",
          "dayNumber": "rdrnDayNumber",
          "dayPassive": "rdrnDayPassive",
          "daySelected": "rdrnDaySelected",
          "dayStartOfMonth": "rdrnDayStartOfMonth",
          "dayStartOfWeek": "rdrnDayStartOfWeek",
          "dayStartPreview": "rdrnDayStartPreview",
          "dayToday": "rdrnDayToday",
          "dayWeekend": "rdrnDayWeekend",
          "days": "rdrnDays",
          "definedRangesWrapper": "rdrnDefinedRangesWrapper",
          "endEdge": "rdrnEndEdge",
          "inRange": "rdrnInRange",
          "infiniteMonths": "rdrnInfiniteMonths",
          "inputRange": "rdrnInputRange",
          "inputRangeInput": "rdrnInputRangeInput",
          "inputRanges": "rdrnInputRanges",
          "month": "rdrnMonth",
          "monthAndYearPickers": "rdrnMonthAndYearPickers",
          "monthAndYearWrapper": "rdrnMonthAndYearWrapper",
          "monthName": "rdrnMonthName",
          "monthPicker": "rdrnMonthPicker",
          "months": "rdrnMonths",
          "monthsHorizontal": "rdrnMonthsHorizontal",
          "monthsVertical": "rdrnMonthsVertical",
          "nextButton": "rdrnNextButton",
          "nextPrevButton": "rdrnNextPrevButton",
          "prevButton": "rdrnPprevButton",
          "selected": "rdrnSelected",
          "startEdge": "rdrnStartEdge",
          "staticRange": "rdrnStaticRange",
          "staticRangeLabel": "rdrnStaticRangeLabel",
          "staticRangeSelected": "rdrnStaticRangeSelected",
          "staticRanges": "rdrnStaticRanges",
          "weekDay": "rdrnWeekDay",
          "weekDays": "rdrnWeekDays",
          "yearPicker": "rdrnYearPicker",
        }
      }
      value="-"
    />
  </div>
</div>
`;
